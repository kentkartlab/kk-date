name: kk-date version update

on:
  pull_request:
    types:
      - closed
    branches:
      - dev
      - main
  workflow_dispatch:

jobs:
  automatic-version-update:
    name: Automatic version update
    runs-on: ubuntu-latest
    if: ${{ (contains(toJson(github.event.pull_request.labels.*.name), 'patch version') || contains(toJson(github.event.pull_request.labels.*.name), 'minor version') || contains(toJson(github.event.pull_request.labels.*.name), 'major version')) && github.event.pull_request.merged == true }}
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Update Version
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          PR_LABELS=$(jq --raw-output '.pull_request.labels[].name' $GITHUB_EVENT_PATH)

          if [[ $PR_LABELS == *"minor version"* ]]; then
            npm version minor --no-git-tag-version
          elif [[ $PR_LABELS == *"major version"* ]]; then
            npm version major --no-git-tag-version
          elif [[ $PR_LABELS == *"patch version"* ]]; then
            npm version patch --no-git-tag-version
          fi

          version=$(node -p "require('./package.json').version")
          git tag -a "v$version" -m "v$version"
          git add .
          git commit -am "Updated to version $version"
      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.pull_request.base.ref }}
    outputs:
      status: ${{ job.status }}
